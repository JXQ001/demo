一、JMM(java内存模型)
1、内存的可见性：在多线程环境中，一个线程对共享变量的修改，能够被其他线程看到。（volatile可保证）
      共享变量：如果一个变量在多个线程的工作内存中存在副本，这个变量就是这几个线程的共享变量
2、原子性：当前线程对一个对象的修改不能被其他的线程打断，本次修改要么成功，要么失败。
（volatile不保证），如何解决？
	①使用synchronized关键字
	②使用java.util.concurrent包下的原子包装类
3、有序性（volatile禁止指令重排）
在多线程中，源代码--->编译器的指令重排---> 指令并行的重排--->内存系统的重排--->最终执行的代码

二、CAS  比较并交换

三、
CountDownLatch 倒数  10 9 ... 1   开始执行
CyclicBarrier  加数  1 2 ... 10   开始执行
Semaphore      信号量，处理多个资源的互斥，并发线程数的控制	
